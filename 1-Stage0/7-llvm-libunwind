# cgnutools: libunwind
# Build as cmlfs
#
# o Use patches from Chimera Linux
# o build libunwind as building stage0 clang requires it
# o Use the monorepo source, i.e llvm-project-x.x.x.tar.xz

# Source tree will be reused later. Apply patches from Chimera Linux
find ../../cports/main/llvm/patches/ -type f -exec patch -Np1 -i {} \;

# Musl doesn't support strtoll_l(), so replace it with a simple strtoll() call.
# Apply patches to allow localization of libc++:
# patch -Np1 -i ../patches/llvm1506-cmlfs/libcxx-use-strtoll_strtoul.patch

# Force 'abi' changes (glibc->musl) to source and disable xlocale.h (holds abi changes).
# patch -Np1 -i ../patches/llvm1506-cmlfs/remove-locale-inlines.patch

# gcc dont have nostdinc(LLVM 19.1.7 and 20.1.8 need this patch, 21.1.2 do not)
patch -Np1 -i ../../CMLFS/patches/llvm-cmlfs/runtimes-Probe-for-nostdlib-and-nostdinc-with-the-C-.patch

# Since, libunwind is for cgnutools, modify the cross-gcc specs to set the dynamic
# loader as  /cgnutools/lib/ld-musl-${MCA}.so.1
export MCGV=$(/cgnutools/bin/x86_64-cmlfs-linux-musl-gcc --version | sed 1q | cut -d' ' -f3- )
/cgnutools/bin/x86_64-cmlfs-linux-musl-gcc -dumpspecs | sed 's/\/lib\/ld-musl/\/cgnutools\/lib\/ld-musl/g' > /cgnutools/lib/gcc/x86_64-cmlfs-linux-musl/$MCGV/specs

export CFLAGS="-fPIC -fuse-ld=mold"
export CXXFLAGS=$CFLAGS

cmake \
    -S libunwind -B build \
    -G Ninja -Wno-dev \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX="/cgnutools" \
    -DCMAKE_INSTALL_OLDINCLUDEDIR="/cgnutools/include" \
    -DCMAKE_EXE_LINKER_FLAGS="-Wl,-rpath=/cgnutools/lib " \
    -DCMAKE_SHARED_LINKER_FLAGS="-Wl,-rpath=/cgnutools/lib " \
    -DCMAKE_C_COMPILER="x86_64-cmlfs-linux-musl-gcc" \
    -DCMAKE_CXX_COMPILER="x86_64-cmlfs-linux-musl-g++" \
    -DCMAKE_AR="/cgnutools/bin/x86_64-cmlfs-linux-musl-ar" \
    -DCMAKE_NM="/cgnutools/bin/x86_64-cmlfs-linux-musl-nm" \
    -DCMAKE_RANLIB="/cgnutools/bin/x86_64-cmlfs-linux-musl-ranlib" \
    -DLIBUNWIND_INSTALL_HEADERS=ON \
    -DLIBUNWIND_ENABLE_CROSS_UNWINDING=ON \
    -DLIBUNWIND_ENABLE_STATIC=OFF \
    -DLIBUNWIND_HIDE_SYMBOLS=ON

# compile
cmake --build build

# install to cgnutools
cmake --install build --strip

# Built libunwind.so will have unresolved symbols:
# $ ldd /cgnutools/lib/libunwind.so.1.0
# 	ldd (0x7fa2a96fb000)
# 	libc.so => ldd (0x7fa2a96fb000
# 	libgcc_s.so.1 => /cgnutools/lib/libgcc_s.so.1 (0x7fa2a96bf000)
# Error relocating build/lib/libunwind.so.1.0: __unw_getcontext: symbol not found
# Error relocating build/lib/libunwind.so.1.0: __libunwind_Registers_x86_64_jumpto: symbol not found
# 
# This will not be a problem

# Remove build directory & clear flags
# Do not remove source tree as it will be used later
rm -rf build
unset CXXFLAGS CFLAGS

# Set the cross-gcc spec to set the dynamic loader as
# /llvmtools/lib/ld-musl-x86_64.so.1
/cgnutools/bin/x86_64-cmlfs-linux-musl-gcc -dumpspecs | sed 's/\/lib\/ld-musl/\/llvmtools\/lib\/ld-musl/g' > /cgnutools/lib/gcc/x86_64-cmlfs-linux-musl/$MCGV/specs
